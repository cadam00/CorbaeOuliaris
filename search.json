[{"path":"https://cadam00.github.io/corbouli/articles/Introduction.html","id":"corbae-ouliaris-frequency-domain-filtering","dir":"Articles","previous_headings":"","what":"Corbae-Ouliaris Frequency Domain Filtering","title":"Introduction to corbouli","text":"Corbae Ouliaris (2006) Frequency Domain Filter used extracting cycles either stationary non-stationary time series. one approximation ideal band pass filter series. minimum maximum periods oscillation determined using method, irrelevant filtering frequencies removed. example Shaw (1947), business cycle usually lower period 1.5 years higher period 8 years. information can used filtering expressed following Table 1. Table 1: Lower higher periods oscillation. table fragments π\\pi can transformed Table 2 using lowerfrequency=2/higherperiodlower\\ frequency = 2 / higher\\ period higherfrequency=2/lowerperiodhigher\\ frequency = 2 / lower\\ period. instance, quarterly sampled time series, lowerfrequency=2/32=0.0625lower\\ frequency = 2 / 32 = 0.0625 higherfrequency=2/6=0.3333higher\\ frequency = 2 / 6 = 0.3333. Table 2: Low high frequency fragments π\\pi. longer series, long run frequency expressed lower frequency fragment π\\pi equal 0. Moreover, output gap can expressed using higher frequency fragment π\\pi equal 1 (Ouliaris, 2009).","code":""},{"path":"https://cadam00.github.io/corbouli/articles/Introduction.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Introduction to corbouli","text":"example, quarterly US GDP billions chained 2017 dollars (Seasonally adjusted) used.  Fig. 1: USgdp dataset.  Fig. 2: Corbae-Ouliaris FD Filter cycles.  Fig. 3: Original vs Decycled USgdp data. noted Ouliaris (2009), setting high_freq = 1 output gap series business cycle one higher volatility (Fig. 4).  Fig. 4: Business cycle vs Output gap.","code":"# Import package to workspace library(corbouli)  # Import \"USgdp\" dataset data(USgdp)  plot(USgdp, main = \"Quarterly US GDP in billions of chained 2017 dollars (Seasonally adjusted)\", ylab = \"\", lwd  = 2) # Extract cycles co <- corbae_ouliaris(USgdp, low_freq = 0.0625, high_freq = 0.3333)  # Plot cycles of filtered series plot(co,      main = \"Corbae-Ouliaris FD Filter cycles for USgdp\",      ylab = \"\",      lwd  = 2) # Plot real data with the ones after removing cycles # Removing cycles from original data USgdp_rmco <- USgdp - co  # Plot Original vs Decycled data plot(USgdp, main = \"Quarterly US GDP in billions of chained 2017 dollars (Seasonally adjusted)\", col = \"black\", lwd = 2, ylab = \"\") lines(USgdp_rmco, col = adjustcolor(\"red\", alpha.f = 0.7), lwd = 2) legend(x = \"topleft\", lwd = 2, text.font = 2,        col= adjustcolor(c(\"black\",\"red\"), alpha.f = 0.7),        legend=c(\"Original data\", \"Decycled data\")) # Extract output gap og <- corbae_ouliaris(USgdp, low_freq = 0.0625, high_freq = 1)  # Plot Business cycle vs Output gap plot(co, main = \"Business cycle vs Output gap for USgdp\",      col = adjustcolor(\"blue\", alpha.f = 0.7), lwd = 2, ylab = \"\") lines(og, col = adjustcolor(\"orange\", alpha.f = 0.7), lwd = 2) legend(x = \"bottomleft\", lwd = 2, text.font = 2,        col= adjustcolor(c(\"blue\",\"orange\"), alpha.f = 0.7),        legend=c(\"Business cycle\", \"Output gap\"))"},{"path":"https://cadam00.github.io/corbouli/articles/Introduction.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to corbouli","text":"Baxter, M., & King, R. (1999),  Measuring Business Cycles: Approximate Band-Pass Filters Economic Time Series. Review Economics Statistics 81(4), pp. 575-593. Corbae, D., Ouliaris, S., & Phillips, P. (2002),  Band Spectral Regression Trending-Data. Econometrica 70(3), pp. 1067-1109. Corbae, D. & Ouliaris, S. (2006), Extracting Cycles Nonstationary Data,Corbae D., Durlauf S.N., & Hansen B.E. (eds.). Econometric Theory Practice: Frontiers Analysis Applied Research. Cambridge: Cambridge University Press, pp. 167–177. https://doi.org/10.1017/CBO9781139164863.008. Ouliaris, S. (2009), Ideal Band Pass Filter Stationary/Non-Stationary Series. Pérez Pérez, J. (2011), COULIARI: Stata module implement Corbae-Ouliaris frequency domain filter time series data. Statistical Software Components, S457218, Boston College Department Economics. Shaw, E.S. (1947), Burns Mitchell Business Cycles. Journal Political Economy, 55(4): pp. 281-298. https://doi.org/10.1086/256533.","code":""},{"path":"https://cadam00.github.io/corbouli/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christos Adam. Author, maintainer.","code":""},{"path":"https://cadam00.github.io/corbouli/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Adam C (2024). corbouli: Corbae-Ouliaris Frequency Domain Filtering. R package version 0.1.1, https://cadam00.github.io/corbouli, https://cadam00.github.io/corbouli/, https://github.com/cadam00/corbouli.","code":"@Manual{,   title = {corbouli: Corbae-Ouliaris Frequency Domain Filtering},   author = {Christos Adam},   year = {2024},   note = {R package version 0.1.1, https://cadam00.github.io/corbouli, https://cadam00.github.io/corbouli/},   url = {https://github.com/cadam00/corbouli}, }"},{"path":"https://cadam00.github.io/corbouli/index.html","id":"install","dir":"","previous_headings":"","what":"Corbae-Ouliaris Frequency Domain Filtering","title":"Corbae-Ouliaris Frequency Domain Filtering","text":"official (CRAN) version package can installed using Alternatively, development version package can installed via","code":"install.packages(\"corbouli\") if (!require(remotes)) install.packages(\"remotes\") remotes::install_github(\"cadam00/corbouli\")"},{"path":"https://cadam00.github.io/corbouli/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Corbae-Ouliaris Frequency Domain Filtering","text":"cite official (CRAN) version package, please use Adam, C. (2024). corbouli: Corbae-Ouliaris Frequency Domain Filtering. R package version 0.1.0. Available https://doi.org/10.32614/CRAN.package.corbouli. Alternatively, cite latest development version, please use: Adam, C. (2024). corbouli: Corbae-Ouliaris Frequency Domain Filtering (v0.1.1). Zenodo. Available https://doi.org/10.5281/zenodo.13740089","code":""},{"path":"https://cadam00.github.io/corbouli/index.html","id":"corbae-ouliaris-frequency-domain-filtering","dir":"","previous_headings":"","what":"Corbae-Ouliaris Frequency Domain Filtering","title":"Corbae-Ouliaris Frequency Domain Filtering","text":"Corbae Ouliaris (2006) Frequency Domain Filter used extracting cycles either stationary non-stationary time series. one approximation ideal band pass filter series. minimum maximum periods oscillation determined using method, irrelevant filtering frequencies removed. example Shaw (1947), business cycle usually lower period 1.5 years higher period 8 years. information can used filtering expressed following Table 1. Table 1: Lower higher periods oscillation. table fragments π\\pi can transformed Table 2 using lowerfrequency=2/higherperiodlower\\ frequency = 2 / higher\\ period higherfrequency=2/lowerperiodhigher\\ frequency = 2 / lower\\ period. instance, quarterly sampled time series, lowerfrequency=2/32=0.0625lower\\ frequency = 2 / 32 = 0.0625 higherfrequency=2/6=0.3333higher\\ frequency = 2 / 6 = 0.3333. Table 2: Low high frequency fragments π\\pi. longer series, long run frequency expressed lower frequency fragment π\\pi equal 0. Moreover, output gap can expressed using higher frequency fragment π\\pi equal 1 (Ouliaris, 2009).","code":""},{"path":"https://cadam00.github.io/corbouli/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Corbae-Ouliaris Frequency Domain Filtering","text":"example, quarterly US GDP billions chained 2017 dollars (Seasonally adjusted) used.  Fig. 1: USgdp dataset.  Fig. 2: Corbae-Ouliaris FD Filter cycles.  Fig. 3: Original vs Decycled USgdp data. noted Ouliaris (2009), setting high_freq = 1 output gap series business cycle one higher volatility (Fig. 4).  Fig. 4: Business cycle vs Output gap.","code":"# Import package to workspace library(corbouli)  # Import \"USgdp\" dataset data(USgdp)  plot(USgdp, main = \"Quarterly US GDP in billions of chained 2017 dollars (Seasonally adjusted)\", ylab = \"\", lwd  = 2) # Extract cycles co <- corbae_ouliaris(USgdp, low_freq = 0.0625, high_freq = 0.3333)  # Plot cycles of filtered series plot(co,      main = \"Corbae-Ouliaris FD Filter cycles for USgdp\",      ylab = \"\",      lwd  = 2) # Plot real data with the ones after removing cycles # Removing cycles from original data USgdp_rmco <- USgdp - co  # Plot Original vs Decycled data plot(USgdp, main = \"Quarterly US GDP in billions of chained 2017 dollars (Seasonally adjusted)\", col = \"black\", lwd = 2, ylab = \"\") lines(USgdp_rmco, col = adjustcolor(\"red\", alpha.f = 0.7), lwd = 2) legend(x = \"topleft\", lwd = 2, text.font = 2,        col= adjustcolor(c(\"black\",\"red\"), alpha.f = 0.7),        legend=c(\"Original data\", \"Decycled data\")) # Extract output gap og <- corbae_ouliaris(USgdp, low_freq = 0.0625, high_freq = 1)  # Plot Business cycle vs Output gap plot(co, main = \"Business cycle vs Output gap for USgdp\",      col = adjustcolor(\"blue\", alpha.f = 0.7), lwd = 2, ylab = \"\") lines(og, col = adjustcolor(\"orange\", alpha.f = 0.7), lwd = 2) legend(x = \"bottomleft\", lwd = 2, text.font = 2,        col= adjustcolor(c(\"blue\",\"orange\"), alpha.f = 0.7),        legend=c(\"Business cycle\", \"Output gap\"))"},{"path":"https://cadam00.github.io/corbouli/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Corbae-Ouliaris Frequency Domain Filtering","text":"Baxter, M., & King, R. (1999),  Measuring Business Cycles: Approximate Band-Pass Filters Economic Time Series. Review Economics Statistics 81(4), pp. 575-593. Corbae, D., Ouliaris, S., & Phillips, P. (2002),  Band Spectral Regression Trending-Data. Econometrica 70(3), pp. 1067-1109. Corbae, D. & Ouliaris, S. (2006), Extracting Cycles Nonstationary Data,Corbae D., Durlauf S.N., & Hansen B.E. (eds.). Econometric Theory Practice: Frontiers Analysis Applied Research. Cambridge: Cambridge University Press, pp. 167–177. https://doi.org/10.1017/CBO9781139164863.008. Ouliaris, S. (2009), Ideal Band Pass Filter Stationary/Non-Stationary Series. Pérez Pérez, J. (2011), COULIARI: Stata module implement Corbae-Ouliaris frequency domain filter time series data. Statistical Software Components, S457218, Boston College Department Economics. Shaw, E.S. (1947), Burns Mitchell Business Cycles. Journal Political Economy, 55(4): pp. 281-298. https://doi.org/10.1086/256533.","code":""},{"path":"https://cadam00.github.io/corbouli/reference/USgdp.html","id":null,"dir":"Reference","previous_headings":"","what":"USgdp — USgdp","title":"USgdp — USgdp","text":"Quarterly US GDP billions chained 2017 dollars (Seasonally adjusted) series 1947.1 2019.4. number observations : 292 observation : country country : United States","code":""},{"path":"https://cadam00.github.io/corbouli/reference/USgdp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"USgdp — USgdp","text":"","code":"data(USgdp)"},{"path":"https://cadam00.github.io/corbouli/reference/USgdp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"USgdp — USgdp","text":"monthly time series, billions chained 2017 dollars.","code":""},{"path":"https://cadam00.github.io/corbouli/reference/USgdp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"USgdp — USgdp","text":"ts object.","code":""},{"path":"https://cadam00.github.io/corbouli/reference/USgdp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"USgdp — USgdp","text":"Bureau Economic Analysis.","code":""},{"path":"https://cadam00.github.io/corbouli/reference/USgdp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"USgdp — USgdp","text":"U.S. Bureau Economic Analysis. (2024). Current-dollar “real” GDP. Retrieved BEA website. https://www.bea.gov/","code":""},{"path":"https://cadam00.github.io/corbouli/reference/USgdp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"USgdp — USgdp","text":"","code":"# Apply on vector data(USgdp) USgdp #>         Qtr1    Qtr2    Qtr3    Qtr4 #> 1947  2182.7  2176.9  2172.4  2206.5 #> 1948  2239.7  2276.7  2289.8  2292.4 #> 1949  2260.8  2253.1  2276.4  2257.4 #> 1950  2346.1  2417.7  2511.1  2559.2 #> 1951  2594.0  2638.9  2693.3  2699.2 #> 1952  2728.0  2733.8  2753.5  2843.9 #> 1953  2896.8  2919.2  2902.8  2858.8 #> 1954  2845.2  2848.3  2880.5  2936.9 #> 1955  3020.7  3069.9  3111.4  3130.1 #> 1956  3117.9  3143.7  3140.9  3192.6 #> 1957  3213.0  3206.0  3237.4  3203.9 #> 1958  3120.7  3141.2  3213.9  3289.0 #> 1959  3352.1  3427.7  3430.1  3439.8 #> 1960  3517.2  3498.2  3515.4  3470.3 #> 1961  3493.7  3553.0  3621.3  3692.3 #> 1962  3758.1  3792.1  3838.8  3851.4 #> 1963  3893.5  3937.2  4023.8  4050.1 #> 1964  4135.6  4180.6  4245.9  4259.0 #> 1965  4362.1  4417.2  4515.4  4619.5 #> 1966  4731.9  4748.0  4788.3  4827.5 #> 1967  4870.3  4873.3  4919.4  4956.5 #> 1968  5057.6  5142.0  5181.9  5202.2 #> 1969  5283.6  5299.6  5334.6  5308.6 #> 1970  5300.7  5308.2  5357.1  5299.7 #> 1971  5443.6  5473.1  5518.1  5531.0 #> 1972  5632.6  5760.5  5814.9  5912.2 #> 1973  6058.5  6124.5  6092.3  6150.1 #> 1974  6097.3  6111.8  6054.0  6030.5 #> 1975  5957.0  5999.6  6102.3  6184.5 #> 1976  6323.6  6370.0  6404.9  6451.2 #> 1977  6527.7  6654.5  6774.5  6774.6 #> 1978  6796.3  7058.9  7129.9  7225.8 #> 1979  7238.7  7246.5  7300.3  7318.5 #> 1980  7341.6  7190.3  7181.7  7315.7 #> 1981  7459.0  7403.7  7492.4  7410.8 #> 1982  7295.6  7328.9  7300.9  7303.8 #> 1983  7400.1  7568.5  7719.7  7880.8 #> 1984  8034.8  8173.7  8252.5  8320.2 #> 1985  8400.8  8474.8  8604.2  8668.2 #> 1986  8749.1  8788.5  8872.6  8920.2 #> 1987  8986.4  9083.3  9162.0  9319.3 #> 1988  9367.5  9490.6  9546.2  9673.4 #> 1989  9771.7  9846.3  9919.2  9938.8 #> 1990 10047.4 10083.9 10090.6  9998.7 #> 1991  9951.9 10029.5 10080.2 10115.3 #> 1992 10236.4 10347.4 10449.7 10558.6 #> 1993 10576.3 10637.8 10688.6 10834.0 #> 1994 10939.1 11087.4 11152.2 11279.9 #> 1995 11320.0 11353.7 11450.3 11528.1 #> 1996 11614.4 11808.1 11914.1 12037.8 #> 1997 12115.5 12317.2 12471.0 12577.5 #> 1998 12703.7 12821.3 12982.8 13191.7 #> 1999 13315.6 13426.7 13604.8 13828.0 #> 2000 13878.1 14130.9 14145.3 14229.8 #> 2001 14183.1 14271.7 14214.5 14253.6 #> 2002 14372.8 14460.8 14519.6 14537.6 #> 2003 14614.1 14743.6 14988.8 15162.8 #> 2004 15248.7 15366.9 15512.6 15670.9 #> 2005 15844.7 15922.8 16047.6 16136.7 #> 2006 16353.8 16396.2 16420.7 16561.9 #> 2007 16611.7 16713.3 16809.6 16915.2 #> 2008 16843.0 16943.3 16854.3 16485.4 #> 2009 16298.3 16269.1 16326.3 16502.8 #> 2010 16582.7 16743.2 16872.3 16960.9 #> 2011 16920.6 17035.1 17031.3 17222.6 #> 2012 17367.0 17444.5 17469.7 17489.9 #> 2013 17662.4 17709.7 17860.5 18016.1 #> 2014 17954.0 18185.9 18406.9 18500.0 #> 2015 18666.6 18782.2 18857.4 18892.2 #> 2016 19001.7 19062.7 19197.9 19304.4 #> 2017 19398.3 19506.9 19660.8 19882.4 #> 2018 20044.1 20150.5 20276.2 20304.9 #> 2019 20415.2 20584.5 20817.6 20951.1"},{"path":"https://cadam00.github.io/corbouli/reference/corbae_ouliaris.html","id":null,"dir":"Reference","previous_headings":"","what":"Corbae-Ouliaris — corbae_ouliaris","title":"Corbae-Ouliaris — corbae_ouliaris","text":"Corbae-Ouliaris (2006) Frequency Domain Filter","code":""},{"path":"https://cadam00.github.io/corbouli/reference/corbae_ouliaris.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Corbae-Ouliaris — corbae_ouliaris","text":"","code":"corbae_ouliaris(x, low_freq = NULL, high_freq = NULL)"},{"path":"https://cadam00.github.io/corbouli/reference/corbae_ouliaris.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Corbae-Ouliaris — corbae_ouliaris","text":"x Vector, data.frame, matrix similar 1D/2D object containing values filtering. low_freq Number indicating lowest period oscillation fractions \\(\\pi\\). low_freq > 1, indicating direct frequency data provided, transformed internally 2 / high_freq. default NULL, meaning ifelse(freq > 1, trunc(freq * 1.5), 2) used. high_freq Number indicating highest period oscillation radians \\(\\pi\\). high_freq > 1, indicating direct frequency data provided, transformed internally 2 / low_freq. default NULL, meaning trunc(freq * 8) used.","code":""},{"path":"https://cadam00.github.io/corbouli/reference/corbae_ouliaris.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Corbae-Ouliaris — corbae_ouliaris","text":"pure R implementation filtering algorithm. low_freq high_freq connected characteristics series, example business circle. low_freq high_freq must either 0 1, meaning frequencies period radians, >1, indicating starting ending periods cycle. low_freq high_freq used keeping relevant frequencies. meant ones inside range \\([ low \\_ freq, high \\_ freq ]\\). Therefore, values outside range removed. 2-dimensional objects x, filtering per column applied.","code":""},{"path":"https://cadam00.github.io/corbouli/reference/corbae_ouliaris.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Corbae-Ouliaris — corbae_ouliaris","text":"Filtered object length/dimensions class input x.","code":""},{"path":"https://cadam00.github.io/corbouli/reference/corbae_ouliaris.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Corbae-Ouliaris — corbae_ouliaris","text":"Corbae, D., Ouliaris, S., & Phillips, P. (2002), Band Spectral Regression Trending-Data. Econometrica 70(3), pp. 1067-1109. Corbae, D. & Ouliaris, S. (2006), Extracting Cycles Nonstationary Data, Corbae D., Durlauf S.N., & Hansen B.E. (eds.). Econometric Theory Practice: Frontiers Analysis Applied Research. Cambridge: Cambridge University Press, pp. 167–177. doi:10.1017/CBO9781139164863.008 . Shaw, E.S. (1947), Burns Mitchell Business Cycles. Journal Political Economy, 55(4): pp. 281-298. doi:10.1086/256533 .","code":""},{"path":[]},{"path":"https://cadam00.github.io/corbouli/reference/corbae_ouliaris.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Corbae-Ouliaris — corbae_ouliaris","text":"","code":"# Apply on ts data(USgdp) corbae_ouliaris(USgdp, low_freq = 0.0625, high_freq = 0.3333) #>              Qtr1         Qtr2         Qtr3         Qtr4 #> 1947  220.4374446  122.2146730   33.5540077   -3.6243130 #> 1948   10.6113369   39.3768099   40.2825008   -2.8369519 #> 1949  -71.2495469 -129.0342713 -150.1239076 -133.1706466 #> 1950  -95.7158479  -56.7938430  -24.3861401    3.4074633 #> 1951   28.3929298   45.5817349   46.8861199   31.0777924 #> 1952    9.2724997   -0.8693667   11.4301191   40.0336886 #> 1953   64.0831297   61.5977873   24.7660718  -33.8838686 #> 1954  -88.3356121 -113.8589767 -100.1392564  -55.4793172 #> 1955   -0.9763568   40.9744701   57.5083715   50.4027740 #> 1956   33.4418691   23.4883815   29.8230795   47.7979276 #> 1957   61.2082211   52.8505177   17.0200826  -34.5796837 #> 1958  -78.3242479  -92.5415050  -70.5103180  -23.7320398 #> 1959   26.2614943   60.9672364   73.3421678   66.8071205 #> 1960   48.0627613   21.3612117  -10.9138151  -43.5155312 #> 1961  -66.1001674  -67.8093518  -45.9585810  -11.0506462 #> 1962   17.6993716   24.4018793    7.3201228  -20.0678019 #> 1963  -38.8975425  -38.2269594  -21.8438258   -3.9619638 #> 1964    2.1439936   -6.3598092  -20.7640848  -27.6841375 #> 1965  -17.9379642    8.6409498   44.2687057   77.6716790 #> 1966   98.4785821  100.0390022   81.1337909   46.9447832 #> 1967    8.2971924  -21.9914370  -34.7934942  -29.0828384 #> 1968  -11.7806417    7.0652325   20.0676697   24.7887948 #> 1969   21.3710926    8.8089537  -15.5630829  -52.1882210 #> 1970  -94.8203571 -130.8590427 -147.9745321 -142.3519803 #> 1971 -121.3188483  -97.1623300  -76.5583796  -54.4709513 #> 1972  -18.2375490   40.9211309  118.2813950  195.9186730 #> 1973  252.7403327  276.0212283  265.4426430  227.7381222 #> 1974  168.5070989   89.7860940   -4.3229828 -100.3939317 #> 1975 -175.9900135 -210.4553739 -199.0109947 -158.3363545 #> 1976 -117.4384477  -99.3080375 -106.7697013 -123.0482535 #> 1977 -126.0170019 -104.4491511  -63.7203917  -17.8293211 #> 1978   23.8874393   63.1529127  106.9216434  155.2834856 #> 1979  194.9148847  205.3081392  173.9828761  108.7888798 #> 1980   36.9698356   -9.5064462  -12.6963884   20.8598987 #> 1981   64.1627969   84.7389792   61.0168774   -8.4910677 #> 1982 -106.0221358 -202.6886195 -269.1163515 -284.8615482 #> 1983 -244.5510491 -159.4451321  -53.5437349   45.1688122 #> 1984  115.2085825  148.9431624  153.0223707  141.9249181 #> 1985  128.7384759  118.6677096  108.4987376   91.1764432 #> 1986   61.7702660   21.1277446  -24.2343844  -65.0436569 #> 1987  -93.0069142 -103.7377214  -98.0186802  -81.0750478 #> 1988  -60.0056265  -40.3021758  -23.2197386   -5.7522756 #> 1989   16.3969631   44.4962676   73.9290623   94.8602903 #> 1990   96.2939345   71.3920704   21.4557891  -43.0440108 #> 1991 -104.6902938 -144.1294659 -146.8924011 -110.0714607 #> 1992  -45.6400566   22.7784353   70.1311025   82.8441656 #> 1993   66.7410904   43.8266012   38.5197075   61.5845951 #> 1994  102.5930845  136.4495528  139.6597677  105.0139320 #> 1995   44.7498023  -18.9518492  -68.0997764  -97.2431868 #> 1996 -111.4880538 -118.2637710 -120.9493850 -119.0250548 #> 1997 -112.4454289 -104.2259294  -98.0023526  -93.3269894 #> 1998  -84.3550731  -64.2474745  -31.3853341    9.0860448 #> 1999   50.6088096   92.3518558  140.0824454  197.9927863 #> 2000  258.0455584  297.8499394  292.2432064  231.6136082 #> 2001  132.2367675   28.4674479  -49.0551536  -92.7850223 #> 2002 -119.7077398 -153.5298944 -202.2777062 -249.9755594 #> 2003 -269.3255600 -244.5968520 -185.4001463 -119.9699573 #> 2004  -74.0185611  -53.0208622  -41.9837455  -21.2362280 #> 2005   16.4717582   61.8701246   99.6037011  121.8939344 #> 2006  132.8543243  141.4301653  152.2847921  164.7604551 #> 2007  179.7794946  204.1928338  243.3034318  285.3886795 #> 2008  294.4756212  225.4100350   57.1068615 -179.6092467 #> 2009 -405.3304111 -531.7135006 -513.8078024 -378.2009473 #> 2010 -205.2837944  -77.2522901  -28.9355358  -35.6262331 #> 2011  -43.0597837  -13.0094041   51.1883124  115.4535658 #> 2012  147.9722684  144.3656036  125.5063150  114.1876064 #> 2013  114.4567004  112.2902858   94.7438901   67.3097084 #> 2014   51.6961299   65.5201609  103.0627876  135.7912513 #> 2015  133.3368710   86.8169129   14.1841600  -56.3593536 #> 2016 -109.0939469 -148.9298073 -188.5671686 -228.4239249 #> 2017 -250.1474506 -231.6177808 -170.2218842  -91.6522788 #> 2018  -33.2167413  -13.8549758  -16.8402361   -2.1956084 #> 2019   59.1579559  157.1991746  245.0267087  271.6855323  # Apply on vector data(USgdp) corbae_ouliaris(USgdp, low_freq = 0.0625, high_freq = 0.3333) #>              Qtr1         Qtr2         Qtr3         Qtr4 #> 1947  220.4374446  122.2146730   33.5540077   -3.6243130 #> 1948   10.6113369   39.3768099   40.2825008   -2.8369519 #> 1949  -71.2495469 -129.0342713 -150.1239076 -133.1706466 #> 1950  -95.7158479  -56.7938430  -24.3861401    3.4074633 #> 1951   28.3929298   45.5817349   46.8861199   31.0777924 #> 1952    9.2724997   -0.8693667   11.4301191   40.0336886 #> 1953   64.0831297   61.5977873   24.7660718  -33.8838686 #> 1954  -88.3356121 -113.8589767 -100.1392564  -55.4793172 #> 1955   -0.9763568   40.9744701   57.5083715   50.4027740 #> 1956   33.4418691   23.4883815   29.8230795   47.7979276 #> 1957   61.2082211   52.8505177   17.0200826  -34.5796837 #> 1958  -78.3242479  -92.5415050  -70.5103180  -23.7320398 #> 1959   26.2614943   60.9672364   73.3421678   66.8071205 #> 1960   48.0627613   21.3612117  -10.9138151  -43.5155312 #> 1961  -66.1001674  -67.8093518  -45.9585810  -11.0506462 #> 1962   17.6993716   24.4018793    7.3201228  -20.0678019 #> 1963  -38.8975425  -38.2269594  -21.8438258   -3.9619638 #> 1964    2.1439936   -6.3598092  -20.7640848  -27.6841375 #> 1965  -17.9379642    8.6409498   44.2687057   77.6716790 #> 1966   98.4785821  100.0390022   81.1337909   46.9447832 #> 1967    8.2971924  -21.9914370  -34.7934942  -29.0828384 #> 1968  -11.7806417    7.0652325   20.0676697   24.7887948 #> 1969   21.3710926    8.8089537  -15.5630829  -52.1882210 #> 1970  -94.8203571 -130.8590427 -147.9745321 -142.3519803 #> 1971 -121.3188483  -97.1623300  -76.5583796  -54.4709513 #> 1972  -18.2375490   40.9211309  118.2813950  195.9186730 #> 1973  252.7403327  276.0212283  265.4426430  227.7381222 #> 1974  168.5070989   89.7860940   -4.3229828 -100.3939317 #> 1975 -175.9900135 -210.4553739 -199.0109947 -158.3363545 #> 1976 -117.4384477  -99.3080375 -106.7697013 -123.0482535 #> 1977 -126.0170019 -104.4491511  -63.7203917  -17.8293211 #> 1978   23.8874393   63.1529127  106.9216434  155.2834856 #> 1979  194.9148847  205.3081392  173.9828761  108.7888798 #> 1980   36.9698356   -9.5064462  -12.6963884   20.8598987 #> 1981   64.1627969   84.7389792   61.0168774   -8.4910677 #> 1982 -106.0221358 -202.6886195 -269.1163515 -284.8615482 #> 1983 -244.5510491 -159.4451321  -53.5437349   45.1688122 #> 1984  115.2085825  148.9431624  153.0223707  141.9249181 #> 1985  128.7384759  118.6677096  108.4987376   91.1764432 #> 1986   61.7702660   21.1277446  -24.2343844  -65.0436569 #> 1987  -93.0069142 -103.7377214  -98.0186802  -81.0750478 #> 1988  -60.0056265  -40.3021758  -23.2197386   -5.7522756 #> 1989   16.3969631   44.4962676   73.9290623   94.8602903 #> 1990   96.2939345   71.3920704   21.4557891  -43.0440108 #> 1991 -104.6902938 -144.1294659 -146.8924011 -110.0714607 #> 1992  -45.6400566   22.7784353   70.1311025   82.8441656 #> 1993   66.7410904   43.8266012   38.5197075   61.5845951 #> 1994  102.5930845  136.4495528  139.6597677  105.0139320 #> 1995   44.7498023  -18.9518492  -68.0997764  -97.2431868 #> 1996 -111.4880538 -118.2637710 -120.9493850 -119.0250548 #> 1997 -112.4454289 -104.2259294  -98.0023526  -93.3269894 #> 1998  -84.3550731  -64.2474745  -31.3853341    9.0860448 #> 1999   50.6088096   92.3518558  140.0824454  197.9927863 #> 2000  258.0455584  297.8499394  292.2432064  231.6136082 #> 2001  132.2367675   28.4674479  -49.0551536  -92.7850223 #> 2002 -119.7077398 -153.5298944 -202.2777062 -249.9755594 #> 2003 -269.3255600 -244.5968520 -185.4001463 -119.9699573 #> 2004  -74.0185611  -53.0208622  -41.9837455  -21.2362280 #> 2005   16.4717582   61.8701246   99.6037011  121.8939344 #> 2006  132.8543243  141.4301653  152.2847921  164.7604551 #> 2007  179.7794946  204.1928338  243.3034318  285.3886795 #> 2008  294.4756212  225.4100350   57.1068615 -179.6092467 #> 2009 -405.3304111 -531.7135006 -513.8078024 -378.2009473 #> 2010 -205.2837944  -77.2522901  -28.9355358  -35.6262331 #> 2011  -43.0597837  -13.0094041   51.1883124  115.4535658 #> 2012  147.9722684  144.3656036  125.5063150  114.1876064 #> 2013  114.4567004  112.2902858   94.7438901   67.3097084 #> 2014   51.6961299   65.5201609  103.0627876  135.7912513 #> 2015  133.3368710   86.8169129   14.1841600  -56.3593536 #> 2016 -109.0939469 -148.9298073 -188.5671686 -228.4239249 #> 2017 -250.1474506 -231.6177808 -170.2218842  -91.6522788 #> 2018  -33.2167413  -13.8549758  -16.8402361   -2.1956084 #> 2019   59.1579559  157.1991746  245.0267087  271.6855323  # Apply on matrix per column mat <- matrix(USgdp, ncol = 4) corbae_ouliaris(mat, low_freq = 0.0625, high_freq = 0.3333) #>               [,1]        [,2]        [,3]        [,4] #>  [1,]  122.7464257 -147.020345 -113.696760   37.143001 #>  [2,]  121.7551863 -139.932119    1.967257   40.795578 #>  [3,]  104.7152492 -114.293150   90.769600  -27.412762 #>  [4,]   81.5982220  -71.118763  117.136438 -129.436200 #>  [5,]   61.8709163  -26.922425   84.482012 -212.278817 #>  [6,]   46.3508669   -1.334270   27.081152 -240.995831 #>  [7,]   26.4847530   -2.007333  -16.204950 -215.775504 #>  [8,]   -7.9317854  -18.813433  -27.252987 -163.813757 #>  [9,]  -58.5287580  -31.379244  -16.333968 -115.494311 #> [10,] -113.8555383  -23.467878   -9.210919  -84.107636 #> [11,] -154.5608891    6.948285  -25.372269  -62.638493 #> [12,] -164.8228428   48.669881  -63.917405  -36.151325 #> [13,] -141.9059944   86.866579 -106.085149    3.233606 #> [14,]  -97.3211436  112.640234 -130.261110   51.207454 #> [15,]  -49.4297712  125.369992 -126.797904   97.845047 #> [16,]  -13.2983564  127.782904 -101.934739  137.343398 #> [17,]    5.3466673  119.950608  -69.813045  171.133805 #> [18,]    9.3484676   98.515848  -40.707453  202.585925 #> [19,]    5.2393092   61.787494  -15.144846  230.499037 #> [20,]   -0.8721754   15.329640   12.691182  249.682787 #> [21,]   -4.1490789  -28.167410   46.951772  259.003197 #> [22,]   -0.2332298  -55.842664   85.227802  268.009799 #> [23,]   13.8865573  -63.103846  120.522836  292.249840 #> [24,]   36.4529842  -56.270748  147.057439  337.027848 #> [25,]   58.1252259  -46.664666  163.556156  381.936837 #> [26,]   64.2936838  -40.632757  170.674362  382.211056 #> [27,]   43.5955521  -33.732015  165.543447  292.440603 #> [28,]   -2.1828904  -14.167901  139.998799  100.124829 #> [29,]  -54.7416957   26.939933   86.259234 -154.713922 #> [30,]  -87.1314957   86.550274    6.761446 -391.516976 #> [31,]  -79.5064621  149.089193  -80.277700 -529.496057 #> [32,]  -32.5861382  194.630779 -146.216097 -532.031300 #> [33,]   31.1695765  209.400045 -166.907926 -426.079690 #> [34,]   80.7080266  190.834461 -137.761091 -283.448041 #> [35,]   95.5993911  144.589502  -78.028333 -176.552137 #> [36,]   78.1982489   77.815620  -20.297530 -138.218034 #> [37,]   50.2264421   -4.336500    8.496081 -150.941342 #> [38,]   36.2641919  -95.934193    2.114567 -169.299916 #> [39,]   46.0058478 -184.965709  -23.541732 -156.323529 #> [40,]   67.8805832 -252.647692  -42.748553 -107.185564 #> [41,]   78.2154655 -280.929159  -37.013339  -45.877869 #> [42,]   58.8637444 -264.078212   -5.560763   -1.842261 #> [43,]   10.4810784 -215.119270   36.420574   12.846723 #> [44,]  -47.5952055 -160.385644   68.670215    8.716272 #> [45,]  -89.8696409 -124.266731   77.475167    5.688492 #> [46,] -100.0613163 -114.408891   60.965905   15.325829 #> [47,]  -78.8459685 -118.189179   26.881811   34.100976 #> [48,]  -40.1706649 -113.181096  -13.257882   51.797589 #> [49,]   -0.8723528  -83.711213  -48.864441   65.304131 #> [50,]   27.9185647  -30.999916  -72.180908   83.850679 #> [51,]   42.3793772   30.305531  -78.867458  120.273681 #> [52,]   42.1361052   85.319965  -69.066524  176.164872 #> [53,]   26.7097846  130.144088  -48.461004  234.883764 #> [54,]   -3.5608573  171.447456  -27.005255  269.969712 #> [55,]  -43.3972746  215.049811  -14.170140  263.105621 #> [56,]  -80.5648310  254.194317  -13.029815  217.156638 #> [57,] -100.0223698  269.323672  -17.863884  153.541411 #> [58,]  -92.7297498  241.864241  -18.194564   96.210923 #> [59,]  -62.6490073  172.086386   -7.027266   55.654067 #> [60,]  -25.7539328   85.940853   13.199906   25.979423 #> [61,]   -0.6125329   22.866437   32.548164   -3.520149 #> [62,]    3.1936438   11.078864   42.743484  -33.776650 #> [63,]   -9.5290274   47.546567   46.133916  -52.557618 #> [64,]  -24.2301054   97.904885   55.761370  -46.431627 #> [65,]  -27.5669052  117.734191   84.301962  -17.785176 #> [66,]  -16.2535889   81.063909  129.347092    9.531940 #> [67,]    2.6139864   -3.536207  167.534007    4.045376 #> [68,]   19.1959279 -100.050172  165.230683  -48.503000 #> [69,]   29.6742816 -169.438647  101.262951 -128.916098 #> [70,]   38.8052922 -193.588870  -13.511428 -192.097278 #> [71,]   54.4390487 -182.445160 -135.269680 -195.991574 #> [72,]   79.0507300 -161.227525 -208.754925 -132.166647 #> [73,]  105.8041713 -149.271491 -199.157048  -35.244676  # Apply on data.frame per column dfmat <- as.data.frame(mat) corbae_ouliaris(dfmat, low_freq = 0.0625, high_freq = 0.3333) #>              V1          V2          V3          V4 #> 1   122.7464257 -147.020345 -113.696760   37.143001 #> 2   121.7551863 -139.932119    1.967257   40.795578 #> 3   104.7152492 -114.293150   90.769600  -27.412762 #> 4    81.5982220  -71.118763  117.136438 -129.436200 #> 5    61.8709163  -26.922425   84.482012 -212.278817 #> 6    46.3508669   -1.334270   27.081152 -240.995831 #> 7    26.4847530   -2.007333  -16.204950 -215.775504 #> 8    -7.9317854  -18.813433  -27.252987 -163.813757 #> 9   -58.5287580  -31.379244  -16.333968 -115.494311 #> 10 -113.8555383  -23.467878   -9.210919  -84.107636 #> 11 -154.5608891    6.948285  -25.372269  -62.638493 #> 12 -164.8228428   48.669881  -63.917405  -36.151325 #> 13 -141.9059944   86.866579 -106.085149    3.233606 #> 14  -97.3211436  112.640234 -130.261110   51.207454 #> 15  -49.4297712  125.369992 -126.797904   97.845047 #> 16  -13.2983564  127.782904 -101.934739  137.343398 #> 17    5.3466673  119.950608  -69.813045  171.133805 #> 18    9.3484676   98.515848  -40.707453  202.585925 #> 19    5.2393092   61.787494  -15.144846  230.499037 #> 20   -0.8721754   15.329640   12.691182  249.682787 #> 21   -4.1490789  -28.167410   46.951772  259.003197 #> 22   -0.2332298  -55.842664   85.227802  268.009799 #> 23   13.8865573  -63.103846  120.522836  292.249840 #> 24   36.4529842  -56.270748  147.057439  337.027848 #> 25   58.1252259  -46.664666  163.556156  381.936837 #> 26   64.2936838  -40.632757  170.674362  382.211056 #> 27   43.5955521  -33.732015  165.543447  292.440603 #> 28   -2.1828904  -14.167901  139.998799  100.124829 #> 29  -54.7416957   26.939933   86.259234 -154.713922 #> 30  -87.1314957   86.550274    6.761446 -391.516976 #> 31  -79.5064621  149.089193  -80.277700 -529.496057 #> 32  -32.5861382  194.630779 -146.216097 -532.031300 #> 33   31.1695765  209.400045 -166.907926 -426.079690 #> 34   80.7080266  190.834461 -137.761091 -283.448041 #> 35   95.5993911  144.589502  -78.028333 -176.552137 #> 36   78.1982489   77.815620  -20.297530 -138.218034 #> 37   50.2264421   -4.336500    8.496081 -150.941342 #> 38   36.2641919  -95.934193    2.114567 -169.299916 #> 39   46.0058478 -184.965709  -23.541732 -156.323529 #> 40   67.8805832 -252.647692  -42.748553 -107.185564 #> 41   78.2154655 -280.929159  -37.013339  -45.877869 #> 42   58.8637444 -264.078212   -5.560763   -1.842261 #> 43   10.4810784 -215.119270   36.420574   12.846723 #> 44  -47.5952055 -160.385644   68.670215    8.716272 #> 45  -89.8696409 -124.266731   77.475167    5.688492 #> 46 -100.0613163 -114.408891   60.965905   15.325829 #> 47  -78.8459685 -118.189179   26.881811   34.100976 #> 48  -40.1706649 -113.181096  -13.257882   51.797589 #> 49   -0.8723528  -83.711213  -48.864441   65.304131 #> 50   27.9185647  -30.999916  -72.180908   83.850679 #> 51   42.3793772   30.305531  -78.867458  120.273681 #> 52   42.1361052   85.319965  -69.066524  176.164872 #> 53   26.7097846  130.144088  -48.461004  234.883764 #> 54   -3.5608573  171.447456  -27.005255  269.969712 #> 55  -43.3972746  215.049811  -14.170140  263.105621 #> 56  -80.5648310  254.194317  -13.029815  217.156638 #> 57 -100.0223698  269.323672  -17.863884  153.541411 #> 58  -92.7297498  241.864241  -18.194564   96.210923 #> 59  -62.6490073  172.086386   -7.027266   55.654067 #> 60  -25.7539328   85.940853   13.199906   25.979423 #> 61   -0.6125329   22.866437   32.548164   -3.520149 #> 62    3.1936438   11.078864   42.743484  -33.776650 #> 63   -9.5290274   47.546567   46.133916  -52.557618 #> 64  -24.2301054   97.904885   55.761370  -46.431627 #> 65  -27.5669052  117.734191   84.301962  -17.785176 #> 66  -16.2535889   81.063909  129.347092    9.531940 #> 67    2.6139864   -3.536207  167.534007    4.045376 #> 68   19.1959279 -100.050172  165.230683  -48.503000 #> 69   29.6742816 -169.438647  101.262951 -128.916098 #> 70   38.8052922 -193.588870  -13.511428 -192.097278 #> 71   54.4390487 -182.445160 -135.269680 -195.991574 #> 72   79.0507300 -161.227525 -208.754925 -132.166647 #> 73  105.8041713 -149.271491 -199.157048  -35.244676"},{"path":"https://cadam00.github.io/corbouli/reference/dftse.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove irrelevant frequencies — dftse","title":"Remove irrelevant frequencies — dftse","text":"Remove irrelevant frequencies","code":""},{"path":"https://cadam00.github.io/corbouli/reference/dftse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove irrelevant frequencies — dftse","text":"","code":"dftse(x, low_freq = NULL, high_freq = NULL)"},{"path":"https://cadam00.github.io/corbouli/reference/dftse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove irrelevant frequencies — dftse","text":"x Vector, data.frame, matrix similar 1D/2D object containing values filtering. low_freq Number indicating lowest period oscillation fractions \\(\\pi\\). low_freq > 1, indicating direct frequency data provided, transformed internally 2 / high_freq. default NULL, meaning ifelse(freq > 1, trunc(freq * 1.5), 2) used. high_freq Number indicating highest period oscillation radians \\(\\pi\\). high_freq > 1, indicating direct frequency data provided, transformed internally 2 / low_freq. default NULL, meaning trunc(freq * 8) used.","code":""},{"path":"https://cadam00.github.io/corbouli/reference/dftse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove irrelevant frequencies — dftse","text":"pure R implementation removing irrelevant frequencies. First, DFT applied data result filtered according low_freq high_freq. Finally, inverse DFT performed relevant frequencies. low_freq high_freq must either 0 1, meaning frequencies period radians, >1, indicating starting ending periods cycle. low_freq high_freq used keeping relevant frequencies. meant ones inside range \\([ low \\_ freq, high \\_ freq ]\\). Therefore, values outside range removed. 2-dimensional objects x, transformation applied per column.","code":""},{"path":"https://cadam00.github.io/corbouli/reference/dftse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove irrelevant frequencies — dftse","text":"Filtered object length/dimensions input x. Note inputs dimensions (e.g. matrix, data.frame) matrix object returned.","code":""},{"path":"https://cadam00.github.io/corbouli/reference/dftse.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Remove irrelevant frequencies — dftse","text":"Corbae, D., Ouliaris, S., & Phillips, P. (2002), Band Spectral Regression Trending-Data. Econometrica 70(3), pp. 1067-1109. Corbae, D. & Ouliaris, S. (2006), Extracting Cycles Nonstationary Data, Corbae D., Durlauf S.N., & Hansen B.E. (eds.). Econometric Theory Practice: Frontiers Analysis Applied Research. Cambridge: Cambridge University Press, pp. 167–177. doi:10.1017/CBO9781139164863.008 . Shaw, E.S. (1947), Burns Mitchell Business Cycles. Journal Political Economy, 55(4): pp. 281-298. doi:10.1086/256533 .","code":""},{"path":[]},{"path":"https://cadam00.github.io/corbouli/reference/dftse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove irrelevant frequencies — dftse","text":"","code":"# Apply on ts object data(USgdp) corbae_ouliaris(USgdp, low_freq = 0.0625, high_freq = 0.3333) #>              Qtr1         Qtr2         Qtr3         Qtr4 #> 1947  220.4374446  122.2146730   33.5540077   -3.6243130 #> 1948   10.6113369   39.3768099   40.2825008   -2.8369519 #> 1949  -71.2495469 -129.0342713 -150.1239076 -133.1706466 #> 1950  -95.7158479  -56.7938430  -24.3861401    3.4074633 #> 1951   28.3929298   45.5817349   46.8861199   31.0777924 #> 1952    9.2724997   -0.8693667   11.4301191   40.0336886 #> 1953   64.0831297   61.5977873   24.7660718  -33.8838686 #> 1954  -88.3356121 -113.8589767 -100.1392564  -55.4793172 #> 1955   -0.9763568   40.9744701   57.5083715   50.4027740 #> 1956   33.4418691   23.4883815   29.8230795   47.7979276 #> 1957   61.2082211   52.8505177   17.0200826  -34.5796837 #> 1958  -78.3242479  -92.5415050  -70.5103180  -23.7320398 #> 1959   26.2614943   60.9672364   73.3421678   66.8071205 #> 1960   48.0627613   21.3612117  -10.9138151  -43.5155312 #> 1961  -66.1001674  -67.8093518  -45.9585810  -11.0506462 #> 1962   17.6993716   24.4018793    7.3201228  -20.0678019 #> 1963  -38.8975425  -38.2269594  -21.8438258   -3.9619638 #> 1964    2.1439936   -6.3598092  -20.7640848  -27.6841375 #> 1965  -17.9379642    8.6409498   44.2687057   77.6716790 #> 1966   98.4785821  100.0390022   81.1337909   46.9447832 #> 1967    8.2971924  -21.9914370  -34.7934942  -29.0828384 #> 1968  -11.7806417    7.0652325   20.0676697   24.7887948 #> 1969   21.3710926    8.8089537  -15.5630829  -52.1882210 #> 1970  -94.8203571 -130.8590427 -147.9745321 -142.3519803 #> 1971 -121.3188483  -97.1623300  -76.5583796  -54.4709513 #> 1972  -18.2375490   40.9211309  118.2813950  195.9186730 #> 1973  252.7403327  276.0212283  265.4426430  227.7381222 #> 1974  168.5070989   89.7860940   -4.3229828 -100.3939317 #> 1975 -175.9900135 -210.4553739 -199.0109947 -158.3363545 #> 1976 -117.4384477  -99.3080375 -106.7697013 -123.0482535 #> 1977 -126.0170019 -104.4491511  -63.7203917  -17.8293211 #> 1978   23.8874393   63.1529127  106.9216434  155.2834856 #> 1979  194.9148847  205.3081392  173.9828761  108.7888798 #> 1980   36.9698356   -9.5064462  -12.6963884   20.8598987 #> 1981   64.1627969   84.7389792   61.0168774   -8.4910677 #> 1982 -106.0221358 -202.6886195 -269.1163515 -284.8615482 #> 1983 -244.5510491 -159.4451321  -53.5437349   45.1688122 #> 1984  115.2085825  148.9431624  153.0223707  141.9249181 #> 1985  128.7384759  118.6677096  108.4987376   91.1764432 #> 1986   61.7702660   21.1277446  -24.2343844  -65.0436569 #> 1987  -93.0069142 -103.7377214  -98.0186802  -81.0750478 #> 1988  -60.0056265  -40.3021758  -23.2197386   -5.7522756 #> 1989   16.3969631   44.4962676   73.9290623   94.8602903 #> 1990   96.2939345   71.3920704   21.4557891  -43.0440108 #> 1991 -104.6902938 -144.1294659 -146.8924011 -110.0714607 #> 1992  -45.6400566   22.7784353   70.1311025   82.8441656 #> 1993   66.7410904   43.8266012   38.5197075   61.5845951 #> 1994  102.5930845  136.4495528  139.6597677  105.0139320 #> 1995   44.7498023  -18.9518492  -68.0997764  -97.2431868 #> 1996 -111.4880538 -118.2637710 -120.9493850 -119.0250548 #> 1997 -112.4454289 -104.2259294  -98.0023526  -93.3269894 #> 1998  -84.3550731  -64.2474745  -31.3853341    9.0860448 #> 1999   50.6088096   92.3518558  140.0824454  197.9927863 #> 2000  258.0455584  297.8499394  292.2432064  231.6136082 #> 2001  132.2367675   28.4674479  -49.0551536  -92.7850223 #> 2002 -119.7077398 -153.5298944 -202.2777062 -249.9755594 #> 2003 -269.3255600 -244.5968520 -185.4001463 -119.9699573 #> 2004  -74.0185611  -53.0208622  -41.9837455  -21.2362280 #> 2005   16.4717582   61.8701246   99.6037011  121.8939344 #> 2006  132.8543243  141.4301653  152.2847921  164.7604551 #> 2007  179.7794946  204.1928338  243.3034318  285.3886795 #> 2008  294.4756212  225.4100350   57.1068615 -179.6092467 #> 2009 -405.3304111 -531.7135006 -513.8078024 -378.2009473 #> 2010 -205.2837944  -77.2522901  -28.9355358  -35.6262331 #> 2011  -43.0597837  -13.0094041   51.1883124  115.4535658 #> 2012  147.9722684  144.3656036  125.5063150  114.1876064 #> 2013  114.4567004  112.2902858   94.7438901   67.3097084 #> 2014   51.6961299   65.5201609  103.0627876  135.7912513 #> 2015  133.3368710   86.8169129   14.1841600  -56.3593536 #> 2016 -109.0939469 -148.9298073 -188.5671686 -228.4239249 #> 2017 -250.1474506 -231.6177808 -170.2218842  -91.6522788 #> 2018  -33.2167413  -13.8549758  -16.8402361   -2.1956084 #> 2019   59.1579559  157.1991746  245.0267087  271.6855323  # Apply on vector dftse(c(USgdp), low_freq = 0.0625, high_freq = 0.3333) #>   [1] -2261.247001 -6330.033796 -7993.035625 -7150.108245 -4947.434912 #>   [6] -2890.134645 -1863.262087 -1743.302503 -1777.771290 -1326.678860 #>  [11]  -351.318632   675.499801  1260.700755  1314.096303  1161.452626 #>  [16]  1197.136190  1524.936268  1901.633084  1997.698623  1710.054680 #>  [21]  1243.147367   907.253841   838.901927   899.642482   828.583949 #>  [26]   491.429731    -4.216705  -418.702908  -597.554286  -592.147993 #>  [31]  -584.597941  -703.458581  -908.809876 -1046.576916 -1007.282497 #>  [36]  -831.703750  -666.317657  -619.247537  -659.355274  -653.676782 #>  [41]  -502.720511  -240.942634    -6.472741    89.097662    65.644573 #>  [46]    54.935079   176.131271   423.786951   671.655629   785.815195 #>  [51]   740.066945   628.437938   568.770567   592.283913   622.649872 #>  [56]   559.746971   383.892455   179.629217    57.347881    48.941534 #>  [61]    77.495738    29.808392  -136.791314  -353.343287  -501.258587 #>  [66]  -518.459254  -451.186571  -405.728788  -447.862665  -544.209573 #>  [71]  -597.450106  -538.655217  -388.915529  -235.070746  -146.961305 #>  [76]  -116.947745   -77.491855    24.174843   169.255658   283.883346 #>  [81]   311.867932   271.939455   243.014671   290.703081   404.897351 #>  [86]   507.736359   524.163684   448.215999   343.234233   277.820065 #>  [91]   260.262730   234.347320   139.486617   -24.017353  -188.524829 #>  [96]  -278.495948  -279.178498  -248.510210  -260.182742  -331.648981 #> [101]  -405.683270  -403.658169  -300.817538  -152.874616   -49.011137 #> [106]   -35.353936   -80.010119  -110.592587   -86.408369   -35.484635 #> [111]   -21.447546   -73.357264  -147.821471  -162.367709   -70.823248 #> [116]    89.846447   226.628113   268.481263   224.785911   171.651462 #> [121]   180.055012   252.701352   326.780578   337.351066   279.869826 #> [126]   212.741263   198.467796   240.128788   273.985942   225.956880 #> [131]    79.942383  -104.634681  -241.279992  -285.886867  -265.292128 #> [136]  -243.399294  -261.207210  -307.748924  -344.871454  -355.024607 #> [141]  -360.440677  -393.520271  -449.769670  -474.680464  -403.950800 #> [146]  -223.078067    10.089200   204.568564   305.027498   329.596481 #> [151]   343.854023   396.343460   475.272015   524.556041   500.986640 #> [156]   416.546450   326.029459   273.723484   252.146036   213.206171 #> [161]   120.416647    -9.697228  -118.667421  -160.146105  -144.850929 #> [166]  -131.848328  -172.808089  -261.734662  -338.783424  -346.004702 #> [171]  -283.221441  -211.211724  -198.405781  -260.163542  -346.333511 #> [176]  -387.110572  -352.873095  -272.317212  -194.980066  -138.240003 #> [181]   -72.676724    39.902999   195.401831   337.759634   405.071799 #> [186]   389.279363   349.894872   363.336065   451.386373   555.548485 #> [191]   584.239067   492.459653   321.927832   164.672514    83.248104 #> [196]    60.616462    24.655914   -77.713474  -227.791074  -353.332029 #> [201]  -398.980970  -380.051743  -367.013464  -415.190129  -507.782277 #> [206]  -568.343489  -532.056461  -407.591948  -269.177110  -185.456309 #> [211]  -153.848447  -105.577953    21.106995   209.728072   368.107366 #> [216]   407.584045   326.856192   219.697459   194.656542   278.192543 #> [221]   391.263339   423.156127   335.572058   200.031099   132.441264 #> [226]   184.745893   294.832148   342.391088   259.256924    91.090575 #> [231]   -47.390258   -81.032594   -43.520422   -41.436337  -147.834867 #> [236]  -328.098688  -470.408178  -492.133522  -418.637909  -355.947351 #> [241]  -381.851323  -462.531944  -481.544527  -360.005455  -153.043370 #> [246]   -21.231554   -90.369722  -323.578067  -529.007757  -508.220677 #> [251]  -220.014651   185.727785   496.190915   611.926063   613.800383 #> [256]   664.133293   839.046740  1051.781465  1138.739699  1023.287085 #> [261]   795.951532   628.824288   603.795331   623.406280   499.275740 #> [266]   141.273063  -335.088054  -697.191111  -807.912663  -761.951647 #> [271]  -805.060420 -1098.083616 -1545.640017 -1863.995590 -1841.867189 #> [276] -1552.902692 -1302.822673 -1334.768573 -1559.457314 -1584.840528 #> [281] -1058.817899   -30.423057  1027.422705  1614.869464  1707.248810 #> [286]  1889.689612  2912.671219  4955.850641  7205.641888  8183.788808 #> [291]  6697.275178  2753.369978  # Apply on matrix per column mat <- matrix(USgdp, ncol = 12) #> Warning: data length [292] is not a sub-multiple or multiple of the number of rows [25] dftse(mat, low_freq = 0.0625, high_freq = 0.3333) #>             [,1]         [,2]       [,3]       [,4]         [,5]        [,6] #>  [1,]  -24.26239    9.4200619  -20.88771 -139.56728  -97.2022267   68.853829 #>  [2,] -189.17401 -134.5812597 -251.52384 -324.03998 -327.5037411 -145.664860 #>  [3,] -290.21545 -254.0493846 -409.37123 -428.14813 -436.8999328 -263.451813 #>  [4,] -308.45938 -312.0605953 -470.23848 -437.07265 -405.4730712 -268.268807 #>  [5,] -260.21409 -296.6721640 -446.24335 -373.04720 -271.3114444 -196.891780 #>  [6,] -187.05009 -224.6002753 -375.06605 -280.39466 -110.4174696 -113.555055 #>  [7,] -133.91133 -131.3267816 -299.04339 -201.45580    0.2415648  -72.729903 #>  [8,] -126.73638  -53.1254813 -245.20166 -156.32281   17.8803383  -90.762027 #>  [9,] -161.02287  -10.4157684 -216.06822 -136.65315  -49.9316894 -141.236508 #> [10,] -206.76411   -0.7533615 -194.76873 -115.81009 -154.9279194 -175.361819 #> [11,] -226.43822   -4.3398105 -160.05502  -68.60023 -236.9408191 -154.700535 #> [12,] -195.94126    1.8359878 -101.80107   11.15494 -255.5895176  -76.888750 #> [13,] -117.13090   29.5583878  -27.84281  105.38575 -208.0202602   20.802466 #> [14,]  -15.55206   72.7571729   41.51486  181.80669 -124.3068887   82.490613 #> [15,]   74.80129  112.1232346   87.59104  213.31146  -44.7985494   67.563452 #> [16,]  130.72970  127.9154182  107.11740  195.33763    6.4030464  -22.015292 #> [17,]  152.06496  113.2266295  116.81800  150.73687   35.9388286 -137.307587 #> [18,]  159.97141   79.6975401  145.08912  118.57269   75.0636475 -204.893725 #> [19,]  182.31920   51.9439874  214.63358  132.34653  156.4656512 -165.321104 #> [20,]  234.52796   53.4328412  325.55168  199.40971  287.7997335   -7.255911 #> [21,]  307.02100   91.6046057  448.89139  293.22454  438.1574690  221.417052 #> [22,]  366.96164  150.8454239  535.55031  363.60396  546.9128652  432.591101 #> [23,]  374.11132  197.9189380  537.32658  360.51250  551.9762072  538.305100 #> [24,]  302.71510  197.7752034  430.15827  259.57258  423.2459980  492.335805 #> [25,]  157.64894  131.8694496  227.86936   76.13611  183.2381797  311.946058 #>             [,7]        [,8]        [,9]        [,10]       [,11]       [,12] #>  [1,] -279.05044  -147.44734  -556.58114  -787.857949  -236.66518   -809.5049 #>  [2,] -681.65921  -641.33087 -1072.21291 -1040.832702  -753.87465   2497.6596 #>  [3,] -899.67619  -955.13554 -1340.66641 -1104.347272 -1039.49158   4717.8007 #>  [4,] -905.63815 -1025.23428 -1324.44392  -999.272993 -1058.63273   5856.8202 #>  [5,] -753.14617  -885.91003 -1093.34058  -793.964029  -880.40917   6137.7600 #>  [6,] -544.71500  -644.88331  -781.30361  -570.393729  -634.41112   5881.1272 #>  [7,] -379.41166  -426.08325  -516.93039  -388.677202  -442.98393   5410.4347 #>  [8,] -307.36284  -309.82272  -364.18144  -266.888060  -364.71086   5002.2169 #>  [9,] -313.46074  -300.63006  -302.84313  -184.211652  -376.86894   4865.8539 #> [10,] -336.33923  -337.24362  -255.86921  -102.958292  -402.66129   5123.5655 #> [11,] -309.82949  -336.39886  -145.29888     4.475123  -364.85034   5772.6014 #> [12,] -202.78514  -244.42016    56.23622   139.053691  -234.08646   6640.5491 #> [13,]  -35.29708   -67.63426   307.59725   277.314367   -44.71378   7370.1841 #> [14,]  136.57650   134.44828   524.12456   389.371164   129.70745   7472.9772 #> [15,]  257.33929   287.75941   630.08928   460.546441   225.50763   6463.9670 #> [16,]  307.59904   350.62977   607.34048   502.517481   232.70827   4046.6429 #> [17,]  317.07721   340.95869   510.77416   546.230455   206.41246    278.4900 #> [18,]  346.54315   326.80437   439.88154   619.876210   237.10330  -4360.9237 #> [19,]  448.18663   384.59624   480.73265   724.660198   394.98120  -9047.5404 #> [20,]  626.95902   548.16329   650.37857   823.470345   679.37987 -12826.3007 #> [21,]  825.99588   778.09974   875.84315   851.259075  1003.21837 -14890.8665 #> [22,]  946.77881   970.87559  1022.13292   744.225759  1224.53257 -14827.1335 #> [23,]  895.79295  1005.78815   957.36907   474.044754  1211.81292 -12729.2780 #> [24,]  634.33576   806.81981   622.42983    69.453283   910.81302  -9148.1110 #> [25,]  205.18708   387.23096    68.74194  -387.094465   378.18297  -4898.9919  # Apply on data.frame per column dfmat <- as.data.frame(mat) dftse(dfmat, low_freq = 0.0625, high_freq = 0.3333) #>             [,1]         [,2]       [,3]       [,4]         [,5]        [,6] #>  [1,]  -24.26239    9.4200619  -20.88771 -139.56728  -97.2022267   68.853829 #>  [2,] -189.17401 -134.5812597 -251.52384 -324.03998 -327.5037411 -145.664860 #>  [3,] -290.21545 -254.0493846 -409.37123 -428.14813 -436.8999328 -263.451813 #>  [4,] -308.45938 -312.0605953 -470.23848 -437.07265 -405.4730712 -268.268807 #>  [5,] -260.21409 -296.6721640 -446.24335 -373.04720 -271.3114444 -196.891780 #>  [6,] -187.05009 -224.6002753 -375.06605 -280.39466 -110.4174696 -113.555055 #>  [7,] -133.91133 -131.3267816 -299.04339 -201.45580    0.2415648  -72.729903 #>  [8,] -126.73638  -53.1254813 -245.20166 -156.32281   17.8803383  -90.762027 #>  [9,] -161.02287  -10.4157684 -216.06822 -136.65315  -49.9316894 -141.236508 #> [10,] -206.76411   -0.7533615 -194.76873 -115.81009 -154.9279194 -175.361819 #> [11,] -226.43822   -4.3398105 -160.05502  -68.60023 -236.9408191 -154.700535 #> [12,] -195.94126    1.8359878 -101.80107   11.15494 -255.5895176  -76.888750 #> [13,] -117.13090   29.5583878  -27.84281  105.38575 -208.0202602   20.802466 #> [14,]  -15.55206   72.7571729   41.51486  181.80669 -124.3068887   82.490613 #> [15,]   74.80129  112.1232346   87.59104  213.31146  -44.7985494   67.563452 #> [16,]  130.72970  127.9154182  107.11740  195.33763    6.4030464  -22.015292 #> [17,]  152.06496  113.2266295  116.81800  150.73687   35.9388286 -137.307587 #> [18,]  159.97141   79.6975401  145.08912  118.57269   75.0636475 -204.893725 #> [19,]  182.31920   51.9439874  214.63358  132.34653  156.4656512 -165.321104 #> [20,]  234.52796   53.4328412  325.55168  199.40971  287.7997335   -7.255911 #> [21,]  307.02100   91.6046057  448.89139  293.22454  438.1574690  221.417052 #> [22,]  366.96164  150.8454239  535.55031  363.60396  546.9128652  432.591101 #> [23,]  374.11132  197.9189380  537.32658  360.51250  551.9762072  538.305100 #> [24,]  302.71510  197.7752034  430.15827  259.57258  423.2459980  492.335805 #> [25,]  157.64894  131.8694496  227.86936   76.13611  183.2381797  311.946058 #>             [,7]        [,8]        [,9]        [,10]       [,11]       [,12] #>  [1,] -279.05044  -147.44734  -556.58114  -787.857949  -236.66518   -809.5049 #>  [2,] -681.65921  -641.33087 -1072.21291 -1040.832702  -753.87465   2497.6596 #>  [3,] -899.67619  -955.13554 -1340.66641 -1104.347272 -1039.49158   4717.8007 #>  [4,] -905.63815 -1025.23428 -1324.44392  -999.272993 -1058.63273   5856.8202 #>  [5,] -753.14617  -885.91003 -1093.34058  -793.964029  -880.40917   6137.7600 #>  [6,] -544.71500  -644.88331  -781.30361  -570.393729  -634.41112   5881.1272 #>  [7,] -379.41166  -426.08325  -516.93039  -388.677202  -442.98393   5410.4347 #>  [8,] -307.36284  -309.82272  -364.18144  -266.888060  -364.71086   5002.2169 #>  [9,] -313.46074  -300.63006  -302.84313  -184.211652  -376.86894   4865.8539 #> [10,] -336.33923  -337.24362  -255.86921  -102.958292  -402.66129   5123.5655 #> [11,] -309.82949  -336.39886  -145.29888     4.475123  -364.85034   5772.6014 #> [12,] -202.78514  -244.42016    56.23622   139.053691  -234.08646   6640.5491 #> [13,]  -35.29708   -67.63426   307.59725   277.314367   -44.71378   7370.1841 #> [14,]  136.57650   134.44828   524.12456   389.371164   129.70745   7472.9772 #> [15,]  257.33929   287.75941   630.08928   460.546441   225.50763   6463.9670 #> [16,]  307.59904   350.62977   607.34048   502.517481   232.70827   4046.6429 #> [17,]  317.07721   340.95869   510.77416   546.230455   206.41246    278.4900 #> [18,]  346.54315   326.80437   439.88154   619.876210   237.10330  -4360.9237 #> [19,]  448.18663   384.59624   480.73265   724.660198   394.98120  -9047.5404 #> [20,]  626.95902   548.16329   650.37857   823.470345   679.37987 -12826.3007 #> [21,]  825.99588   778.09974   875.84315   851.259075  1003.21837 -14890.8665 #> [22,]  946.77881   970.87559  1022.13292   744.225759  1224.53257 -14827.1335 #> [23,]  895.79295  1005.78815   957.36907   474.044754  1211.81292 -12729.2780 #> [24,]  634.33576   806.81981   622.42983    69.453283   910.81302  -9148.1110 #> [25,]  205.18708   387.23096    68.74194  -387.094465   378.18297  -4898.9919"},{"path":[]},{"path":"https://cadam00.github.io/corbouli/news/index.html","id":"minor-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"corbouli 0.1.1","text":"Update comments corabe_ouliaris.R file. Add CRAN version badge. Update DESCRIPTION text.","code":""},{"path":"https://cadam00.github.io/corbouli/news/index.html","id":"corbouli-010","dir":"Changelog","previous_headings":"","what":"corbouli 0.1.0","title":"corbouli 0.1.0","text":"CRAN release: 2024-09-12","code":""},{"path":"https://cadam00.github.io/corbouli/news/index.html","id":"major-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"corbouli 0.1.0","text":"Initial package version.","code":""}]
